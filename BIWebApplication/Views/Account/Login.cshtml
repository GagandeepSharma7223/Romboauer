@using BIWebApplication.Models
@model LoginViewModel
@{
    ViewBag.Title = "Log in";
}

<h2>@ViewBag.Title.</h2>
<div class="row">
    <div class="col-md-8">
        <section id="loginForm">
            @using (Html.BeginForm("Login", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
            {
                @Html.AntiForgeryToken()
                <h4>Use a local account to log in.</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.DevExpress().Label(settings =>
               {
                   settings.Name = "UserEmail";
                   settings.Text = "Email";
                   settings.ControlStyle.CssClass = "col-md-2 control-label";
               }).GetHtml()
                    <div class="col-md-10">
                        @Html.DevExpress().TextBoxFor(model => model.Email,
                        settings =>
                        {
                            settings.Width = 220;
                            settings.Properties.ValidationSettings.RegularExpression.ValidationExpression = @"\w+([-+.']\w+)*@\w+([-.]\w+)*\.\w+([-.]\w+)*";
                            settings.Properties.ValidationSettings.RequiredField.IsRequired = true;
                            settings.Properties.ValidationSettings.RequiredField.ErrorText = "Eamil is Required.";
                            settings.Properties.ValidationSettings.ErrorTextPosition = DevExpress.Web.ErrorTextPosition.Bottom;
                            settings.Properties.ValidationSettings.ErrorDisplayMode = DevExpress.Web.ErrorDisplayMode.ImageWithText;
                            settings.ControlStyle.CssClass = "form-control";
                        }).GetHtml()
                        @*@Html.TextBoxFor(m => m.Email, new { @class = "form-control" })*@
                        @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">

                    @Html.DevExpress().Label(settings =>
               {
                   settings.Name = "UserPassword";
                   settings.Text = "Password";
                   settings.ControlStyle.CssClass = "col-md-2 control-label";
               }).GetHtml()
                    <div class="col-md-10">
                        @Html.DevExpress().TextBoxFor(model => model.Password,
                        settings =>
                        {
                            settings.Width = 220;
                            settings.Properties.ValidationSettings.RequiredField.IsRequired = true;
                            settings.Properties.ValidationSettings.RequiredField.ErrorText = "Password is Required.";
                            settings.Properties.ValidationSettings.ErrorTextPosition = DevExpress.Web.ErrorTextPosition.Bottom;
                            settings.Properties.ValidationSettings.ErrorDisplayMode = DevExpress.Web.ErrorDisplayMode.ImageWithText;
                            settings.ControlStyle.CssClass = "form-control";
                            settings.Properties.Password = true;
                        }).GetHtml()
                        @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <div class="checkbox">
                            @Html.DevExpress().CheckBoxFor(model => model.RememberMe,
    settings =>
    {

        settings.Checked = true;
        settings.Text = "Remember me?";

    }
).GetHtml()
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        @Html.DevExpress().Button(settings =>
                    {
                        settings.Name = "Button";
                        settings.Text = "Log In";
                        settings.UseSubmitBehavior = true;
                        settings.ControlStyle.CssClass = "btn btn-default";
                    }).GetHtml()
                    </div>
                </div>
                <p>
                    @Html.ActionLink("Register as a new user", "Register")
                </p>
                @* Enable this once you have account confirmation enabled for password reset functionality
                    <p>
                        @Html.ActionLink("Forgot your password?", "ForgotPassword")
                    </p>*@
            }
        </section>
    </div>
    <div class="col-md-4">
        <section id="socialLoginForm">
            @Html.Partial("_ExternalLoginsListPartial", new ExternalLoginListViewModel { ReturnUrl = ViewBag.ReturnUrl })
        </section>
    </div>
</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}